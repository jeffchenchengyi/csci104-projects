Problem 1 (More git questions, 10%)
In this problem, we will be working with a fictional Sample Repository, 
which we pretend is located at https://github.com/usc-csci104-spring2018/SampleRepo, 
and contains README.md. (There is no actual repo there, so don't be surprised if 
you cannot actually clone it or otherwise interact with it.) 
This exercise is designed to measure your understanding of the file status 
lifecycle in git. Please frame your answers in the context of the following 
lifecycle based on your interaction with the repository as specified below:

Git File Status Lifecycle

figure courtesy of the Pro Git book by Scott Chacon

Parts (a) through (f) should be done in sequence. 
In other words, when you get to part (f), you should assume that 
you already executed the earlier commands (a), (b), ..., (e). 
You must use the terminalogy specified in the lifecycle shown above, 
for example the output of git status is not accepted as a valid answer. 
For the purposes of this question, you can assume you have full access 
(i.e., read/write) to the repository.

Part (a):
What is the status of README.md after performing the 
following operations:

#Change directory to the home directory
cd
#Clone the SampleRepo repository
git clone git@github.com:usc-csci104-spring2018/SampleRepo.git
#Change directory into the local copy of SampleRepo
cd SampleRepo

ANSWER: 
The status of README.md is currently tracked(Unmodified).


Part (b):
What is the status of README.md and fun_problem.txt after performing 
the following operations:

#Create a new empty file named fun_problem.txt
touch fun_problem.txt
#List files
ls
#Append a line to the end of README.md
echo "Markdown is easy" >> README.md

ANSWER:
The status of README.md is currently tracked(Modified)
and fun_problem.txt is currently untracked.


Part (c):
What is the status of README.md and fun_problem.txt after performing 
the following operation:

git add README.md fun_problem.txt

ANSWER:
Both README.md and fun_problem.txt are currently tracked(Staged) and 
will go into the next commit.


Part (d):
What is the status of README.md and fun_problem.txt after performing
the following operations:

git commit -m "My opinion on markdown"
echo "Markdown is too easy" >> README.md
echo "So far, so good" >> fun_problem.txt

ANSWER:
Both README.md and fun_problem.txt became tracked(Unmodified) and 
currently are tracked(Modified) after the echo commands.


Part (e):
What is the status of README.md and fun_problem.txt after performing 
the following operations:

git add README.md
git checkout -- fun_problem.txt
Also, what are the contents of fun_problem.txt? Why?

ANSWER:
README.md is currently tracked(Staged) and will go into the next
commit. But fun_problem.txt is currently tracked(Unmodified) as
git checkout discard the changes made 
by `echo "So far, so good" >> fun_problem.txt` in part (d), 
reverting the status of the file to the
last commit in part (d). fun_problem.txt presently still contains 
nothing.


Part (f):
What is the status of README.md after performing the following operation:

echo "Fancy git move" >> README.md
Explain why this status was reached.

ANSWER:
README.md is now listed as both staged for commit and also unstaged.
The README.md version that is tracked(Staged) contains data before
`echo "Fancy git move" >> README.md`, because git add README.md in 
part (e) only staged that version into the commit. Presently, there 
will also be another version of the README.md in the actual working
directory with changes made after `echo "Fancy git move" >> README.md`,
but has not been staged yet. "If you modify a file after you run git add, you have to run git add again to stage the latest version of the file" - courtesy of the Pro Git book by Scott Chacon.




Problem 3 (Abstract Data Types, 20%)
For each of the following data storage needs, describe which 
abstract data types you would suggest using. Natural choices would 
include list, set, and map.

Try to be specific, e.g., rather than just saying "a list", say "a 
list of integers" or "a list of structs consisting of a name (string) 
and a GPA (double)". Also, state any assumptions you have made, and 
give a brief explanation for your answers: we are grading you at least 
as much on your justification as on the correctness of the answer. 
Also, if you give a wrong answer, when you include an explanation, 
we'll know whether it was a minor error or a major one, and can give 
you appropriate partial credit. Also, there may be multiple equally 
good options, so your justification may get you full credit.

1. a data type that stores all of the items at a restaurant, 
ordered by their number on the menu (an integer from 1 to 100).

ANSWER:
Assuming that the menu is to be placed on a website just for 
consumers to view and is organized like this:
Chinese Food Menu:
-> Meat
||-> 1. Orange Chicken
||-> 2. Stir-fried beef
||-> 3. Sweet and sour pork
-> Vegetable
||-> 1. Brocolli with garlic
||-> 2. Spinach with 3 egg
-> Noodle
||-> 1. Egg noodle with pork chop
||-> 2. Dry noodle with minced pork
-> Drink
||-> 1. Lime juice
||-> 2. Grass Jelly drink
||-> 3. Milk tea

A list of sub-menu structs containing sub-menu string name(Meat), 
int size, and a list pointer to the sub-menu list containing 
fooditem structs consisting of string name(Orange chicken), float
price, bool bestseller, bool isSpicy, and some printList, getter,
setter, and void insertNewFoodItem functions.


2. a data type that stores all of the movies in the Star Wars universe.

ANSWER:
Assuming that the movies are to be displayed on a blog just for 
visitors to view and is organized like this:
All Star Wars films:
-> Trilogies
||-> 1. I – The Phantom Menace (1999)
||-> 2. II – Attack of the Clones (2002)
||-> 3. III – Revenge of the Sith (2005)
-> Anthology
||-> 1. Rogue One: A Star Wars Story (2016)
||-> 2. Solo: A Star Wars Story (2018)
-> Animated
||-> 1. The Clone Wars (2008)
-> TV
||-> 1. Holiday Special (1978)
||-> 2. Caravan of Courage: An Ewok Adventure (1984)
||-> 3. Ewoks: The Battle for Endor (1985)

A list of sub-catgeory film structs containing sub-catgeory 
film string name(Trilogies), int size, and a list pointer to 
the sub-catgeory film containing film structs consisting 
of string name(I - The Phantom Menace), string netflix url link to 
purchase, bool bestseller, int year, and some printList, 
getter, setter, and void insertNewFilm functions.


3. a data type that stores all of the books on Amazon: given an ISBN 
(a 13-digit number), it produces the book with that number.

ANSWER:



4. a data type that stores all movies: given a year, 
it produces all movies 
released in that year.

ANSWER:



5. a data type that stores all of the episodes of Game of Thrones: 
given a season and episode number, it produces the requested episode.

ANSWER:




Problem 4 (Linked Lists, Recursion, 10%)
Consider the following C++ code. What linked list is returned if funcA 
is called with the input linked list 1,2,3,4,5? All of the points for 
this problem will be assigned based on your explanation, since we have 
full faith in your ability to run this program and copy down the answer. 
We strongly recommend solving this by hand, and only using a compiler 
to verify your answer.

ANSWER:

linked list returned: 1
-> 

struct Node {
    int value;
    Node *next;
};

Node* funcB(Node* in) {
    if (!in) return nullptr;
    Node *p = funcB(in->next);
    if (p) {
        p->next = in;
    }
    return in;
}

Node* funcA(Node* in) {
    if (!in) return nullptr;
    Node *r = in;
    while (r->next) r = r->next;
    Node *l = funcB(in);
    l->next = nullptr;
    return r;
}